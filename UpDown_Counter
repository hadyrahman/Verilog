module updown(input clk,rstn,mode,output [1:0]q);
wire w1,w2,w3;
and a1(w1,mode,~q[0]);
and a2(w2,~mode,q[0]);
or o1(w3,w1,w2);
tff t1(.d(1'b1),.clk(clk),.rstn(rstn),.q(q[0]));
tff t2(.d(w3),.clk(clk),.rstn(rstn),.q(q[1]));
endmodule
module tff(d, clk, rstn, q);
 input d, clk, rstn; 
 output q;
 reg q;
initial begin
q=1'b1;
end
 always @ ( posedge clk)
 if (~rstn) begin
     q <= 1'b0;
 end else if (d) begin
     q <= !q;
 end
 endmodule


testbench

module tb();
reg clk,rstn,mode;
wire [1:0] q;
updown uut(clk,rstn,mode,q);
initial clk=0;
always #5 clk=~clk;
initial begin
rstn=1;
mode=0;
#300;
rstn=0;
#50;
rstn=1;
mode=1;
#300;
end
endmodule
